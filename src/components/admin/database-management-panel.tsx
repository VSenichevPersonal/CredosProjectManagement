'use client'

import { useState } from 'react'
import { Database, Trash2, Loader2, AlertTriangle, CheckCircle, Search } from 'lucide-react'
import { Button } from '@/components/ui/button'
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from '@/components/ui/card'
import {
  AlertDialog,
  AlertDialogAction,
  AlertDialogCancel,
  AlertDialogContent,
  AlertDialogDescription,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogTitle,
} from '@/components/ui/alert-dialog'
import { useToast } from '@/hooks/use-toast'

interface SeedStats {
  directions: number
  employees: number
  projects: number
  tasks: number
  timeEntries: number
}

interface IntegrityReport {
  status: 'excellent' | 'good' | 'warning' | 'critical'
  message: string
  report: {
    tables: Record<string, { exists: boolean; count: number }>
    orphans: any[]
    warnings: string[]
    errors: string[]
    summary: {
      totalRecords: number
      tablesChecked: number
      activeEmployees: number
      activeDirections: number
      activeProjects: number
      recentTimeEntries: number
    }
  }
}

export function DatabaseManagementPanel() {
  const { toast } = useToast()
  const [isSeeding, setIsSeeding] = useState(false)
  const [isResetting, setIsResetting] = useState(false)
  const [isChecking, setIsChecking] = useState(false)
  const [showResetDialog, setShowResetDialog] = useState(false)
  const [seedStats, setSeedStats] = useState<SeedStats | null>(null)
  const [integrityReport, setIntegrityReport] = useState<IntegrityReport | null>(null)

  const handleSeedDatabase = async () => {
    setIsSeeding(true)
    setSeedStats(null)

    try {
      const response = await fetch('/api/admin/seed-db', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
      })

      const data = await response.json()

      if (!response.ok) {
        throw new Error(data.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –ë–î')
      }

      setSeedStats(data.stats)
      toast({
        title: '‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø–æ–ª–Ω–µ–Ω–∞',
        description: `–°–æ–∑–¥–∞–Ω–æ: ${data.stats.directions} –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π, ${data.stats.employees} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, ${data.stats.projects} –ø—Ä–æ–µ–∫—Ç–æ–≤`,
      })
    } catch (error: any) {
      console.error('Seed error:', error)
      toast({
        title: '‚ùå –û—à–∏–±–∫–∞',
        description: error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–æ–ª–Ω–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö',
        variant: 'destructive',
      })
    } finally {
      setIsSeeding(false)
    }
  }

  const handleCheckIntegrity = async () => {
    setIsChecking(true)
    setIntegrityReport(null)

    try {
      const response = await fetch('/api/admin/check-db', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      })

      const data = await response.json()

      if (!response.ok) {
        throw new Error(data.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ë–î')
      }

      setIntegrityReport(data)
      
      const statusEmojis: Record<'excellent' | 'good' | 'warning' | 'critical', string> = {
        excellent: '‚úÖ',
        good: 'üëç',
        warning: '‚ö†Ô∏è',
        critical: '‚ùå'
      }
      const statusEmoji = statusEmojis[data.status as 'excellent' | 'good' | 'warning' | 'critical']
      
      toast({
        title: `${statusEmoji} ${data.message}`,
        description: `–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: ${data.report.summary.tablesChecked}, –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${data.report.summary.totalRecords}`,
        variant: data.status === 'critical' || data.status === 'warning' ? 'destructive' : 'default',
      })
    } catch (error: any) {
      console.error('Check integrity error:', error)
      toast({
        title: '‚ùå –û—à–∏–±–∫–∞',
        description: error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –ë–î',
        variant: 'destructive',
      })
    } finally {
      setIsChecking(false)
    }
  }

  const handleResetDatabase = async () => {
    setShowResetDialog(false)
    setIsResetting(true)
    setSeedStats(null)
    setIntegrityReport(null)

    try {
      const response = await fetch('/api/admin/reset-db', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          confirm: '–£–î–ê–õ–ò–¢–¨ –í–°–ï –î–ê–ù–ù–´–ï',
        }),
      })

      const data = await response.json()

      if (!response.ok) {
        throw new Error(data.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ë–î')
      }

      toast({
        title: '‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞',
        description: '–í—Å–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ "–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏" –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è.',
      })
    } catch (error: any) {
      console.error('Reset error:', error)
      toast({
        title: '‚ùå –û—à–∏–±–∫–∞',
        description: error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö',
        variant: 'destructive',
      })
    } finally {
      setIsResetting(false)
    }
  }

  return (
    <>
      <Card className="border-orange-200 bg-orange-50/50">
        <CardHeader>
          <div className="flex items-center gap-2">
            <Database className="h-5 w-5 text-orange-600" />
            <CardTitle>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö</CardTitle>
          </div>
          <CardDescription>
            –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å—é!
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          {/* Check Integrity Button */}
          <div className="flex items-start gap-4 p-4 border border-blue-200 rounded-lg bg-blue-50/50">
            <div className="flex-1">
              <h3 className="font-medium mb-1 text-blue-900">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –ë–î</h3>
              <p className="text-sm text-blue-700">
                –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–∞–±–ª–∏—Ü—ã, foreign keys, orphaned records –∏ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É.
                –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.
              </p>
              {integrityReport && (
                <div className={`mt-3 p-3 border rounded-md ${
                  integrityReport.status === 'excellent' ? 'bg-green-50 border-green-200' :
                  integrityReport.status === 'good' ? 'bg-blue-50 border-blue-200' :
                  integrityReport.status === 'warning' ? 'bg-yellow-50 border-yellow-200' :
                  'bg-red-50 border-red-200'
                }`}>
                  <div className="flex items-center gap-2 mb-2">
                    {integrityReport.status === 'excellent' && <CheckCircle className="h-4 w-4 text-green-600" />}
                    {integrityReport.status === 'good' && <CheckCircle className="h-4 w-4 text-blue-600" />}
                    {integrityReport.status === 'warning' && <AlertTriangle className="h-4 w-4 text-yellow-600" />}
                    {integrityReport.status === 'critical' && <AlertTriangle className="h-4 w-4 text-red-600" />}
                    <span className={`text-sm font-medium ${
                      integrityReport.status === 'excellent' ? 'text-green-900' :
                      integrityReport.status === 'good' ? 'text-blue-900' :
                      integrityReport.status === 'warning' ? 'text-yellow-900' :
                      'text-red-900'
                    }`}>
                      {integrityReport.message}
                    </span>
                  </div>
                  <ul className={`text-xs space-y-1 ml-6 ${
                    integrityReport.status === 'excellent' ? 'text-green-800' :
                    integrityReport.status === 'good' ? 'text-blue-800' :
                    integrityReport.status === 'warning' ? 'text-yellow-800' :
                    'text-red-800'
                  }`}>
                    <li>‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {integrityReport.report.summary.totalRecords}</li>
                    <li>‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {integrityReport.report.summary.activeEmployees}</li>
                    <li>‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π: {integrityReport.report.summary.activeDirections}</li>
                    <li>‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤: {integrityReport.report.summary.activeProjects}</li>
                    {integrityReport.report.errors.length > 0 && (
                      <li className="text-red-700">‚ö†Ô∏è –û—à–∏–±–æ–∫: {integrityReport.report.errors.length}</li>
                    )}
                    {integrityReport.report.orphans.length > 0 && (
                      <li className="text-yellow-700">‚ö†Ô∏è Orphaned –∑–∞–ø–∏—Å–µ–π: {integrityReport.report.orphans.length}</li>
                    )}
                    {integrityReport.report.warnings.length > 0 && (
                      <li className="text-yellow-700">‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {integrityReport.report.warnings.length}</li>
                    )}
                  </ul>
                </div>
              )}
            </div>
            <Button
              onClick={handleCheckIntegrity}
              disabled={isChecking}
              className="bg-blue-600 hover:bg-blue-700"
            >
              {isChecking ? (
                <>
                  <Loader2 className="h-4 w-4 mr-2 animate-spin" />
                  –ü—Ä–æ–≤–µ—Ä—è–µ–º...
                </>
              ) : (
                <>
                  <Search className="h-4 w-4 mr-2" />
                  –ü—Ä–æ–≤–µ—Ä–∏—Ç—å
                </>
              )}
            </Button>
          </div>

          {/* Seed Button */}
          <div className="flex items-start gap-4 p-4 border rounded-lg bg-white">
            <div className="flex-1">
              <h3 className="font-medium mb-1">–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏</h3>
              <p className="text-sm text-muted-foreground">
                –î–æ–±–∞–≤–ª—è–µ—Ç –≤ –ë–î —Ç–µ—Å—Ç–æ–≤—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è, —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –ø—Ä–æ–µ–∫—Ç—ã, –∑–∞–¥–∞—á–∏ –∏ –∑–∞–ø–∏—Å–∏ –≤—Ä–µ–º–µ–Ω–∏ 
                <strong> –∑–∞ 3 –º–µ—Å—è—Ü–∞ (–∞–≤–≥—É—Å—Ç-–æ–∫—Ç—è–±—Ä—å 2025)</strong>.
                –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –±–∞–∑–µ (–¥—É–±–ª–∏–∫–∞—Ç—ã –Ω–µ —Å–æ–∑–¥–∞—é—Ç—Å—è).
              </p>
              {seedStats && (
                <div className="mt-3 p-3 bg-green-50 border border-green-200 rounded-md">
                  <div className="flex items-center gap-2 mb-2">
                    <CheckCircle className="h-4 w-4 text-green-600" />
                    <span className="text-sm font-medium text-green-900">–î–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã:</span>
                  </div>
                  <ul className="text-xs text-green-800 space-y-1 ml-6">
                    <li>‚Ä¢ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π: {seedStats.directions}</li>
                    <li>‚Ä¢ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {seedStats.employees}</li>
                    <li>‚Ä¢ –ü—Ä–æ–µ–∫—Ç–æ–≤: {seedStats.projects}</li>
                    <li>‚Ä¢ –ó–∞–¥–∞—á: {seedStats.tasks}</li>
                    <li>‚Ä¢ –ó–∞–ø–∏—Å–µ–π –≤—Ä–µ–º–µ–Ω–∏: {seedStats.timeEntries}</li>
                  </ul>
                </div>
              )}
            </div>
            <Button
              onClick={handleSeedDatabase}
              disabled={isSeeding}
              className="bg-blue-600 hover:bg-blue-700"
            >
              {isSeeding ? (
                <>
                  <Loader2 className="h-4 w-4 mr-2 animate-spin" />
                  –ó–∞–ø–æ–ª–Ω—è–µ–º...
                </>
              ) : (
                <>
                  <Database className="h-4 w-4 mr-2" />
                  –ó–∞–ø–æ–ª–Ω–∏—Ç—å
                </>
              )}
            </Button>
          </div>

          {/* Reset Button */}
          <div className="flex items-start gap-4 p-4 border border-red-200 rounded-lg bg-red-50/50">
            <div className="flex-1">
              <h3 className="font-medium mb-1 text-red-900 flex items-center gap-2">
                <AlertTriangle className="h-4 w-4" />
                –û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
              </h3>
              <p className="text-sm text-red-700">
                –û–ü–ê–°–ù–û! –£–¥–∞–ª—è–µ—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã (–∫—Ä–æ–º–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü).
                –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
              </p>
            </div>
            <Button
              onClick={() => setShowResetDialog(true)}
              disabled={isResetting}
              variant="destructive"
            >
              {isResetting ? (
                <>
                  <Loader2 className="h-4 w-4 mr-2 animate-spin" />
                  –û—á–∏—â–∞–µ–º...
                </>
              ) : (
                <>
                  <Trash2 className="h-4 w-4 mr-2" />
                  –û—á–∏—Å—Ç–∏—Ç—å
                </>
              )}
            </Button>
          </div>
        </CardContent>
        <CardFooter className="bg-yellow-50 border-t border-yellow-200">
          <div className="flex items-start gap-2 text-sm text-yellow-800">
            <AlertTriangle className="h-4 w-4 mt-0.5 flex-shrink-0" />
            <p>
              <strong>–í–Ω–∏–º–∞–Ω–∏–µ:</strong> –≠—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
              –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞ production –æ–∫—Ä—É–∂–µ–Ω–∏–∏!
            </p>
          </div>
        </CardFooter>
      </Card>

      {/* Confirmation Dialog */}
      <AlertDialog open={showResetDialog} onOpenChange={setShowResetDialog}>
        <AlertDialogContent>
          <AlertDialogHeader>
            <AlertDialogTitle className="flex items-center gap-2 text-red-600">
              <AlertTriangle className="h-5 w-5" />
              –í—ã –∞–±—Å–æ–ª—é—Ç–Ω–æ —É–≤–µ—Ä–µ–Ω—ã?
            </AlertDialogTitle>
            <AlertDialogDescription className="space-y-2">
              <p>
                –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç <strong>–í–°–ï –î–ê–ù–ù–´–ï</strong> –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:
              </p>
              <ul className="list-disc list-inside space-y-1 text-sm">
                <li>–í—Å–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è</li>
                <li>–í—Å–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</li>
                <li>–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã –∏ –∑–∞–¥–∞—á–∏</li>
                <li>–í—Å–µ –∑–∞–ø–∏—Å–∏ –≤—Ä–µ–º–µ–Ω–∏</li>
                <li>–í—Å–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ</li>
              </ul>
              <p className="font-semibold text-red-600 mt-4">
                –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!
              </p>
            </AlertDialogDescription>
          </AlertDialogHeader>
          <AlertDialogFooter>
            <AlertDialogCancel>–û—Ç–º–µ–Ω–∞</AlertDialogCancel>
            <AlertDialogAction
              onClick={handleResetDatabase}
              className="bg-red-600 hover:bg-red-700"
            >
              –î–∞, —É–¥–∞–ª–∏—Ç—å –≤—Å—ë
            </AlertDialogAction>
          </AlertDialogFooter>
        </AlertDialogContent>
      </AlertDialog>
    </>
  )
}

