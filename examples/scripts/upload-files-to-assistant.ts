/**
 * –£–ø—Ä–æ—â—ë–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É Assistant
 * SDK 6.3.0 - –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è –æ—Ç 10 –æ–∫—Ç—è–±—Ä—è 2025
 * 
 * Usage:
 *   npx tsx scripts/upload-files-to-assistant.ts
 */

import { config } from 'dotenv'
import OpenAI from 'openai'
import fs from 'fs'
import path from 'path'

config({ path: '.env.local' })

const ASSISTANT_ID = process.env.OPENAI_DOCUMENT_ASSISTANT_ID || ''

async function main() {
  console.log('üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–∏–ø–æ–≤—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∫ Assistant...')
  console.log('')
  
  if (!process.env.OPENAI_API_KEY) {
    console.error('‚ùå OPENAI_API_KEY not found')
    process.exit(1)
  }
  
  if (!ASSISTANT_ID) {
    console.error('‚ùå OPENAI_DOCUMENT_ASSISTANT_ID not found')
    console.error('   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: asst_6sA6C83ydEYgZy6bFNPMfYIq')
    process.exit(1)
  }
  
  const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY })
  
  console.log(`üìù Assistant ID: ${ASSISTANT_ID}`)
  console.log('')
  
  // –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
  const docsDir = path.join(process.cwd(), 'training-data/pdn-documents')
  const files = fs.readdirSync(docsDir)
    .filter(f => f.endsWith('.md'))
    .map(f => path.join(docsDir, f))
  
  console.log(`üìÅ –ù–∞–π–¥–µ–Ω–æ ${files.length} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`)
  console.log('')
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã
  const fileIds: string[] = []
  let uploaded = 0
  
  for (const filePath of files) {
    try {
      const filename = path.basename(filePath)
      console.log(`‚¨ÜÔ∏è  ${filename}`)
      
      const file = await openai.files.create({
        file: fs.createReadStream(filePath),
        purpose: 'assistants'
      })
      
      fileIds.push(file.id)
      uploaded++
      
    } catch (error: any) {
      console.error(`   ‚ùå –û—à–∏–±–∫–∞: ${error.message}`)
    }
  }
  
  console.log('')
  console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${uploaded}/${files.length} —Ñ–∞–π–ª–æ–≤`)
  console.log('')
  
  // –û–±–Ω–æ–≤–ª—è–µ–º Assistant —Å —Ñ–∞–π–ª–∞–º–∏
  // –í SDK 6.x –º–æ–∂–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª—ã –Ω–∞–ø—Ä—è–º—É—é
  try {
    console.log('üìé –ü—Ä–∏–∫—Ä–µ–ø–ª—è—é —Ñ–∞–π–ª—ã –∫ Assistant...')
    
    const assistant = await openai.beta.assistants.update(ASSISTANT_ID, {
      tool_resources: {
        file_search: {
          vector_stores: [{
            file_ids: fileIds
          }]
        }
      }
    })
    
    console.log('‚úÖ –§–∞–π–ª—ã –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω—ã –∫ Assistant!')
    console.log('')
    console.log('üìä –°—Ç–∞—Ç—É—Å:')
    console.log('   Assistant:', assistant.id)
    console.log('   –§–∞–π–ª–æ–≤:', fileIds.length)
    console.log('')
    console.log('‚úÖ Setup –∑–∞–≤–µ—Ä—à—ë–Ω! –ú–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é!')
    console.log('')
    console.log('üéØ –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:')
    console.log('   npm run dev')
    console.log('   ‚Üí http://localhost:3000/documents/wizard/new')
    
  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Assistant:', error.message)
    console.error('')
    console.error('üí° –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–µ–Ω –¥—Ä—É–≥–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –¥–ª—è SDK 6.x')
    console.error('   –§–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã, ID —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')
    console.error('   –ú–æ–∂–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ OpenAI Playground')
  }
}

main()

